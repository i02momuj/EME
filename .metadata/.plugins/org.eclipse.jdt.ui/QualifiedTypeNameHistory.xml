<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="mulan.evaluation.measure.Measure"/>
<fullyQualifiedTypeName name="mulan.evaluation.Evaluator"/>
<fullyQualifiedTypeName name="weka.classifiers.functions.SMOreg"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.HammingLoss"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.ExampleBasedFMeasure"/>
<fullyQualifiedTypeName name="net.sf.jclec.selector.TournamentSelector"/>
<fullyQualifiedTypeName name="net.sf.jclec.selector.WorsesSelector"/>
<fullyQualifiedTypeName name="net.sf.jclec.selector.BettersSelector"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.MacroPrecision"/>
<fullyQualifiedTypeName name="weka.core.Utils"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.MacroAverageMeasure"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.ExampleBasedAccuracy"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.MicroRecall"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.MicroSpecificity"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.MicroAccuracy"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.MacroAccuracy"/>
<fullyQualifiedTypeName name="mulan.classifier.lazy.MLkNN"/>
<fullyQualifiedTypeName name="mulan.classifier.lazy.IBLR_ML"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="net.sf.jclec.problem.classification.multilabel.mut.PhiBasedIntraModelMutator"/>
<fullyQualifiedTypeName name="net.sf.jclec.problem.classification.multilabel.mut.IntraModelMutatorII"/>
<fullyQualifiedTypeName name="net.sf.jclec.problem.classification.multilabel.EnsembleClassifier"/>
<fullyQualifiedTypeName name="weka.core.json.sym"/>
<fullyQualifiedTypeName name="mulan.classifier.meta.thresholding.OneThreshold"/>
<fullyQualifiedTypeName name="mulan.data.MultiLabelInstances"/>
<fullyQualifiedTypeName name="weka.filters.supervised.attribute.AttributeSelection"/>
<fullyQualifiedTypeName name="weka.attributeSelection.CfsSubsetEval"/>
<fullyQualifiedTypeName name="weka.attributeSelection.GreedyStepwise"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="weka.filters.supervised.instance.Resample"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.MacroRecall"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.MacroSpecificity"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.ExampleBasedPrecision"/>
<fullyQualifiedTypeName name="mulan.evaluation.MultipleEvaluation"/>
<fullyQualifiedTypeName name="weka.datagenerators.classifiers.classification.BayesNet"/>
<fullyQualifiedTypeName name="weka.classifiers.bayes.net.BayesNetGenerator"/>
<fullyQualifiedTypeName name="mulan.classifier.transformation.LabelPowerset"/>
<fullyQualifiedTypeName name="weka.classifiers.functions.SMO"/>
<fullyQualifiedTypeName name="weka.classifiers.trees.J48"/>
<fullyQualifiedTypeName name="weka.classifiers.bayes.BayesNet"/>
<fullyQualifiedTypeName name="weka.filters.supervised.attribute.Discretize"/>
<fullyQualifiedTypeName name="weka.core.Instances"/>
<fullyQualifiedTypeName name="weka.filters.Filter"/>
<fullyQualifiedTypeName name="mulan.evaluation.measure.MacroFMeasure"/>
<fullyQualifiedTypeName name="java.lang.Math"/>
<fullyQualifiedTypeName name="java.lang.reflect.Array"/>
<fullyQualifiedTypeName name="java.lang.Double"/>
<fullyQualifiedTypeName name="java.util.Hashtable"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="java.lang.ArrayStoreException"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="net.sf.jclec.binarray.BinArrayIndividual"/>
<fullyQualifiedTypeName name="net.sf.jclec.util.random.Ranecu"/>
<fullyQualifiedTypeName name="net.sf.jclec.IIndividual"/>
<fullyQualifiedTypeName name="javax.naming.Context"/>
<fullyQualifiedTypeName name="net.sf.jclec.problem.classification.multilabel.rec.MultiModelCrossover"/>
<fullyQualifiedTypeName name="net.sf.jclec.problem.classification.multilabel.rec.ModelCrossover"/>
<fullyQualifiedTypeName name="net.sf.jclec.problem.classification.multilabel.rec.UniformModelCrossover"/>
<fullyQualifiedTypeName name="net.sf.jclec.util.random.IRandGen"/>
</qualifiedTypeNameHistroy>
